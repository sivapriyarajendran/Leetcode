/*
// Definition for a Node.
class Node {
    public int val;
    public Node next;
    public Node random;

    public Node() {}

    public Node(int _val,Node _next,Node _random) {
        val = _val;
        next = _next;
        random = _random;
    }
};
*/
class Solution {
    public Node copyRandomList(Node head) {
      Node hd = new Node(0,null,null);
        Node temp = head;
        Node newTemp = hd;
        Map<Integer,Node> map = new HashMap<>();
        while(temp!=null){
            newTemp.next = new Node(temp.val,null,null);
            map.put(temp.val,newTemp.next);
            temp = temp.next;
            newTemp = newTemp.next;
        }
        
        hd = hd.next;
        Node newHead = hd;
        while(hd != null){
            if(head.random != null){
                 hd.random = map.get(head.random.val);
            }
            hd = hd.next;
            head = head.next;
        }
        return newHead;
    }
}
