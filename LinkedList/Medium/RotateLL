/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public ListNode rotateRight(ListNode head, int k) { 
        ListNode temp = head;
        int n=count(temp);
        if(n==0 || n==1 || k==0 )return head;
        k=k%n;
        if(n==0 || n==1 || k==0 || n==k)return head;
        
        temp=head;
        for(int i=0;i<n-k-1;i++){
            temp=temp.next;
        }
        ListNode newsStart_prev= temp;
        ListNode newStart  = temp.next;
        while(temp.next!=null){
            temp=temp.next;
        }
        newsStart_prev.next=null;
        temp.next=head;
        head=newStart;
        return head;
    }
    
    public int count(ListNode head){
        int len=0;
        while(head!=null){
            len++;
            head=head.next;
        }
        return len;
    }
}
