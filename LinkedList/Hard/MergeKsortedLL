/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public ListNode mergeKLists(ListNode[] lists) {
        ListNode result = new ListNode(-1);
        ListNode temp = result;
        PriorityQueue<ListNode> pq= new PriorityQueue<>(new Comparator<ListNode>(){
            @Override
            public int compare(ListNode o1, ListNode o2) {
                return o1.val - o2.val;
            }
        });
        for(ListNode node: lists){
            if(node!=null)
            pq.add(node);
        }
        while(!pq.isEmpty()){
            ListNode curr = pq.remove();
            temp.next= new ListNode(curr.val);
            temp=temp.next;
            if(curr.next!=null){
                pq.add(curr.next);
            }
        }
        return result.next;
    }
}
