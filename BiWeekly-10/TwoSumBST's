/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public boolean twoSumBSTs(TreeNode root1, TreeNode root2, int target) {
        if (root1 == null || root2 == null) 
            return false; 
        Stack<TreeNode> s1 = new Stack<>(); 
        Stack<TreeNode> s2 = new Stack<>(); 
        TreeNode top1, top2; 
       
        int count = 0; 
        while (true) { 
            while (root1 != null) { 
                s1.push(root1); 
                root1 = root1.left; 
            } 
            while (root2 != null) { 
                s2.push(root2); 
                root2 = root2.right; 
            } 
            if (s1.empty() || s2.empty()) 
                break; 
       
            top1 = s1.peek(); 
            top2 = s2.peek(); 
            if ((top1.val + top2.val) == target) { 
                return true;
            } 
            else if ((top1.val + top2.val) < target) { 
                s1.pop(); 
                root1 = top1.right; 
            } 
            else { 
                s2.pop(); 
                root2 = top2.left; 
            } 
        } 
        return false;
    }
}
